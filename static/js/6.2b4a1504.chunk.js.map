{"version":3,"sources":["pages/Dialogs/Dialogs.module.css","pages/Dialogs/DialogsUser/DialogsUser.jsx","pages/Dialogs/DialogsMessage/DialogsMessage.jsx","pages/Dialogs/SendMessage/SendMessage.jsx","pages/Dialogs/Dialogs.jsx","components/HOC/withAuthRedirect.js","redux/dialogs-selector.js","pages/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsUser","id","name","className","css","dialog","to","activeClassName","active","DialogsMessage","message","SendMessage","addMessage","onSubmit","value","newMessage","render","handleSubmit","component","Dialogs","dialogsData","dialogsMessage","dialogs","dialogs_items","map","user","key","messages","mapStateToPropsForRedirect","state","isAuth","auth","getDialogsMessageSelector","dialogsPage","getDialogsDataSelector","compose","Component","RedirectComponent","this","props","React","connect","dispatch","newMessageBody","action","addDialogActionCreator"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,qFCgBlKC,MAbf,YAAoC,IAAbC,EAAY,EAAZA,GAAIC,EAAQ,EAARA,KAC1B,OACC,yBAAKC,UAAWC,IAAIC,QACnB,kBAAC,IAAD,CACCC,GAAI,YAAcL,EAClBM,gBAAiBH,IAAII,QAEpBN,KCFUO,MANf,YAAsC,IAAZC,EAAW,EAAXA,QACzB,OACC,yBAAKP,UAAWC,IAAIM,SAAUA,I,SCiBjBC,MAnBf,YAAsC,IAAfC,EAAc,EAAdA,WAMtB,OACC,kBAAC,IAAD,CACCC,SANe,SAACC,GACjBF,EAAWE,EAAMC,aAMhBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACP,0BAAMJ,SAAUI,GACf,kBAAC,IAAD,CAAOf,KAAK,aAAagB,UAAU,aACnC,iDCqBUC,MA9Bf,YAAiE,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,eAAgBT,EAAgB,EAAhBA,WAC/C,OACC,6BACC,sFACA,yBAAKT,UAAWC,IAAIkB,SAEnB,yBAAKnB,UAAWC,IAAImB,eAClBH,EAAYI,KAAK,SAAAC,GAAI,OACrB,kBAAC,EAAD,CACEC,IAAK,UAAYD,EAAKxB,GACtBC,KAAMuB,EAAKvB,KACXD,GAAIwB,EAAKxB,SAGb,yBAAKE,UAAWC,IAAIuB,UACnB,kBAAC,EAAD,CACEf,WAAYA,IAEbS,EAAeG,KAAK,SAAAd,GAAO,OAC3B,kBAAC,EAAD,CACEgB,IAAK,WAAahB,EAAQT,GAC1BS,QAASA,EAAQA,QACjBT,GAAIS,EAAQT,Y,uDCxBd2B,EAA6B,SAACC,GAAD,MAAY,CAC9CC,OAAQD,EAAME,KAAKD,S,QCLPE,EAA4B,SAACH,GACzC,OAAOA,EAAMI,YAAYZ,gBAGba,EAAyB,SAACL,GACtC,OAAOA,EAAMI,YAAYb,aCcXe,uBFXiB,SAACC,GAAe,IAEzCC,EAFwC,uKAI5C,OAAKC,KAAKC,MAAMT,OAET,kBAACM,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUjC,GAAG,eAJA,GAEdkC,IAAMJ,WAQtC,OAAOK,YAAQb,EAARa,CAAoCJ,KEG3CI,aAduB,SAACZ,GAAD,MAAY,CACnCR,eAAgBW,EAA0BH,GAC1CT,YAAac,EAAuBL,OAGV,SAACa,GAAD,MAAe,CACzC9B,WAAY,SAAC+B,GACZ,IAAMC,EAASC,YAAuBF,GACtCD,EAASE,QAIIT,CAGbhB","file":"static/js/6.2b4a1504.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__32wgu\",\"dialogs_items\":\"Dialogs_dialogs_items__1JthF\",\"dialog\":\"Dialogs_dialog__5s-F8\",\"active\":\"Dialogs_active__3Bm-M\",\"messages\":\"Dialogs_messages__2zk66\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport css from './../Dialogs.module.css'\r\n\r\nfunction DialogsUser({ id, name }) {\r\n\treturn (\r\n\t\t<div className={css.dialog}>\r\n\t\t\t<NavLink \r\n\t\t\t\tto={'/dialogs/' + id}\r\n\t\t\t\tactiveClassName={css.active}\r\n\t\t\t>\r\n\t\t\t\t{name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogsUser\r\n","import React from 'react'\r\nimport css from './../Dialogs.module.css'\r\n\r\nfunction DialogsMessage({ message }) {\r\n\treturn (\r\n\t\t<div className={css.message}>{message}</div>\r\n\t) \r\n}\r\n\r\nexport default DialogsMessage\r\n","import React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\n\r\nfunction SendMessage({ addMessage }) {\r\n\r\n\tconst onSubmit = (value) => {\r\n\t\taddMessage(value.newMessage)\r\n\t}\r\n\r\n\treturn (\t\r\n\t\t<Form \r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\trender={({ handleSubmit }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Field name='newMessage' component='textarea'/>\r\n\t\t\t\t\t<button>add post</button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default SendMessage\r\n","import React from 'react'\r\nimport css from './Dialogs.module.css'\r\nimport DialogsUser from './DialogsUser/DialogsUser'\r\nimport DialogsMessage from './DialogsMessage/DialogsMessage'\r\nimport SendMessage from './SendMessage/SendMessage'\r\n\r\nfunction Dialogs({ dialogsData, dialogsMessage, addMessage,  }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Сообщения</h2>\r\n\t\t\t<div className={css.dialogs}>\r\n\r\n\t\t\t\t<div className={css.dialogs_items}>\r\n\t\t\t\t\t{dialogsData.map( user => \r\n\t\t\t\t\t\t<DialogsUser\r\n\t\t\t\t\t\t\t\tkey={'userId_' + user.id} \r\n\t\t\t\t\t\t\t\tname={user.name} \r\n\t\t\t\t\t\t\t\tid={user.id}/>)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={css.messages}>\r\n\t\t\t\t\t<SendMessage \r\n\t\t\t\t\t\t\taddMessage={addMessage}/>\r\n\r\n\t\t\t\t\t{dialogsMessage.map( message => \r\n\t\t\t\t\t\t<DialogsMessage\r\n\t\t\t\t\t\t\t\tkey={'message_' + message.id} \r\n\t\t\t\t\t\t\t\tmessage={message.message} \r\n\t\t\t\t\t\t\t\tid={message.id}/>)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender () {\r\n\t\t\tif (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t} \r\n\r\n\treturn connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","export const getDialogsMessageSelector = (state) => {\r\n\treturn state.dialogsPage.dialogsMessage\r\n}\r\n\r\nexport const getDialogsDataSelector = (state) => {\r\n\treturn state.dialogsPage.dialogsData\r\n}","import Dialogs from './Dialogs'\r\nimport { addDialogActionCreator } from './../../redux/dialogs-reducer'\r\nimport { withAuthRedirect } from '../../components/HOC/withAuthRedirect'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { getDialogsMessageSelector, getDialogsDataSelector } from '../../redux/dialogs-selector'\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tdialogsMessage: getDialogsMessageSelector(state),\r\n\tdialogsData: getDialogsDataSelector(state)\t\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddMessage: (newMessageBody) => {\r\n\t\tconst action = addDialogActionCreator(newMessageBody)\r\n\t\tdispatch(action)\r\n\t}\r\n})\r\n\r\nexport default compose(\r\n\twithAuthRedirect,\r\n\tconnect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)"],"sourceRoot":""}