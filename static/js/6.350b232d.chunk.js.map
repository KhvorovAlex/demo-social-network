{"version":3,"sources":["components/Form/ErrorLogin/ErrorLogin.jsx","pages/Login/Login.jsx","pages/Login/LoginContainer.jsx"],"names":["ErrorLogin","errorText","className","LoginForm","loginUser","captcha","onSubmit","value","a","email","password","remember","FORM_ERROR","required","undefined","validate","values","errors","render","handleSubmit","submitting","submitError","name","type","placeholder","input","meta","error","touched","src","alt","disabled","Login","isAuth","to","mapDispatchToProps","connect","state","getIsAuthSelector","getCaptchaSelector"],"mappings":"+OAWeA,MARf,YAAoC,IAAdC,EAAa,EAAbA,UACrB,OACC,yBAAKC,UAAU,eACd,0BAAMA,UAAU,qBAAqBD,KCWxC,IAAME,EAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAEzBC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,SAAUN,EAAWE,EAAXF,QADlB,SAEQD,EAAUK,EAAOC,EAAUC,EAAUN,GAF7C,YAEVJ,EAFU,gEAILW,IAAaX,IAJR,2CAAH,sDAmBRY,EAAW,SAAAN,GAAK,OAAOA,OAA6BO,EAArB,yFAErC,OACC,kBAAC,IAAD,CACCR,SAAUA,EACVS,SAhBiB,SAAAC,GAClB,IAAMC,EAAS,GAOf,OANKD,EAAOP,QACXQ,EAAOR,MAAQ,+KAEXO,EAAON,WACXO,EAAOP,SAAW,+KAEZO,GASNC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,YAA7B,OACP,0BAAMnB,UAAU,YAAYI,SAAUa,GACrC,kBAAC,IAAD,CAAOG,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAC3C,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,6BACC,0BAAWD,GACVC,EAAKC,OAASD,EAAKE,SAAW,8BAAOF,EAAKC,WAK9C,kBAAC,IAAD,CAAOL,KAAK,WAAWC,KAAK,WAAWC,YAAY,aACjD,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,6BACC,0BAAWD,GACVC,EAAKC,OAASD,EAAKE,SAAW,8BAAOF,EAAKC,WAK9C,kBAAC,IAAD,CAAOL,KAAK,WAAWC,KAAK,aAC1B,gBAAGE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,6BACC,0BAAWD,GACX,8CACCC,EAAKC,OAASD,EAAKE,SAAW,8BAAOF,EAAKC,WAK7CtB,GACA,6BACC,yBAAKwB,IAAKxB,EAASyB,IAAI,YACvB,kBAAC,IAAD,CAAOR,KAAK,UAAUC,KAAK,OAAOR,SAAUF,IAC1C,gBAAGY,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACA,6BACC,0BAAWD,GACVC,EAAKC,OAASD,EAAKE,SAAW,8BAAOF,EAAKC,YAOhD,4BAAQJ,KAAK,SAASQ,SAAUX,GAAhC,SAICC,GAAe,kBAAC,EAAD,CAAYpB,UAAWoB,SAO7BW,EA7Ff,YAAgD,IAA/B5B,EAA8B,EAA9BA,UAAW6B,EAAmB,EAAnBA,OAAQ5B,EAAW,EAAXA,QACnC,OACC,6BACE4B,EACE,kBAAC,IAAD,CAAUC,GAAG,aACb,kBAAC,EAAD,CAAW9B,UAAWA,EAAWC,QAASA,M,gBCD1C8B,EAAqB,CAC1B/B,eAGcgC,uBATS,SAACC,GAAD,MAAY,CACnCJ,OAAQK,YAAkBD,GAC1BhC,QAASkC,YAAmBF,MAOWF,EAAzBC,CAA6CJ","file":"static/js/6.350b232d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ErrorLogin.css'\r\n\r\nfunction ErrorLogin({ errorText }) {\r\n\treturn (\r\n\t\t<div className=\"error-login\">\r\n\t\t\t<span className=\"error-login__text\">{errorText}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorLogin\r\n","import React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { FORM_ERROR } from 'final-form'\r\nimport { Redirect } from 'react-router-dom'\r\nimport ErrorLogin from '../../components/Form/ErrorLogin/ErrorLogin'\r\n\r\nfunction Login({ loginUser, isAuth, captcha }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isAuth \r\n\t\t\t\t? <Redirect to='/profile'/>\r\n\t\t\t\t: <LoginForm loginUser={loginUser} captcha={captcha}/>\r\n\t\t\t}\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst LoginForm = ({ loginUser, captcha }) => {\r\n\r\n\tconst onSubmit = async (value) => {\t\t\r\n\t\tconst {email, password, remember, captcha} = value\r\n\t\tconst errorText = await loginUser(email, password, remember, captcha)\t\r\n\t\tif(errorText) {\r\n\t\t\treturn { [FORM_ERROR]: errorText }\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tconst onValidate = values => {\t\r\n\t\tconst errors = {}\r\n\t\tif (!values.email) {\r\n\t\t\terrors.email = 'Поле обязательно для заполнения'\r\n\t\t}\r\n\t\tif (!values.password) {\r\n\t\t\terrors.password = 'Поле обязательно для заполнения'\r\n\t\t}\t\t\r\n\t\treturn errors\r\n\t}\r\n\r\n\tconst required = value => ( !value ? 'Заполните капчу' :  undefined)\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tvalidate={onValidate}\r\n\t\t\trender={({ handleSubmit, submitting, submitError }) => (\r\n\t\t\t\t<form className=\"main-form\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<Field name=\"email\" type=\"email\" placeholder=\"Email\">\r\n\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input {...input} />\r\n\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Field>\r\n\r\n\t\t\t\t\t<Field name=\"password\" type=\"password\" placeholder=\"Password\">\r\n\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input {...input} />\r\n\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Field>\r\n\r\n\t\t\t\t\t<Field name=\"remember\" type=\"checkbox\">\r\n\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input {...input} />\r\n\t\t\t\t\t\t\t\t<label>Remember me</label>\r\n\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Field>\r\n\r\n\t\t\t\t\t{captcha && \r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={captcha} alt=\"captcha\"/>\r\n\t\t\t\t\t\t\t<Field name=\"captcha\" type=\"text\" validate={required}>\r\n\t\t\t\t\t\t\t\t{({ input, meta }) => (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<input {...input} />\r\n\t\t\t\t\t\t\t\t\t\t{meta.error && meta.touched && <span>{meta.error}</span>}\r\n\t\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<button type=\"submit\" disabled={submitting}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{submitError && <ErrorLogin errorText={submitError}/>}\t\t\t\t\t\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import { loginUser } from '../../redux/auth-reducer'\r\nimport Login from './Login'\r\nimport { connect } from 'react-redux'\r\nimport { getIsAuthSelector, getCaptchaSelector } from '../../redux/auth-selector'\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: getIsAuthSelector(state),\r\n\tcaptcha: getCaptchaSelector(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tloginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\r\n"],"sourceRoot":""}